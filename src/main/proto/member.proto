syntax = "proto3";

package com.test.member.grpc;

// 여기에 내가 원하는 패키지명을 적는다. 아래는 예시이며 실제 프로젝트 패키지를 잘 보면서 수정하자.
//option java_multiple_files = true;
option java_package = "com.test.member.grpc";
option java_outer_classname = "MemberProto";

service MemberService {
  // gRPC의 스트리밍 기능을 통해 다수의 요청과 응답을 효율적으로 처리하는 방식
  rpc StreamCreateMember (stream MemberRequest) returns (stream MemberCreateResponse);

  // 단일 회원 ID로 조회
  rpc GetMemberById (MemberIdRequest) returns (MemberResponse);

  // 이메일로 회원 조회
  rpc GetMemberByEmail (MemberEmailRequest) returns (MemberResponse);

  // 여러 회원 조회 (페이징 지원)
  rpc ListMembers (ListMemberRequest) returns (ListMemberResponse);
}

// 회원 ID로 조회 요청
message MemberIdRequest {
  int64 id = 1;
}

// 이메일로 조회 요청
message MemberEmailRequest {
  string email = 1;
}

// 회원 목록 조회 요청 (페이징 지원)
message ListMemberRequest {
  int32 page = 1;      // 페이지 번호
  int32 pageSize = 2;  // 페이지당 데이터 수
}

// 회원 조회 응답
message MemberResponse {
  int64 id = 1;
  string email = 2;
  string name = 4;
  string profileImageBase64 = 5;
  string etcInfo = 6;
  // 비밀번호는 보안상 응답에 포함하지 않음
}

// 회원 목록 조회 응답
message ListMemberResponse {
  repeated MemberResponse members = 1;
  int32 totalCount = 2;    // 전체 회원 수
  int32 page = 3;          // 현재 페이지
  int32 pageSize = 4;      // 페이지당 데이터 수
}

// 멤버 생성 요청 객체
message MemberRequest {
  int64 id = 1;
  string email = 2;
  string password = 3;
  string name = 4;
  // 대용량 필드
  string profileImageBase64 = 5;
  string etcInfo = 6;
}

// 멤버 생성 응답
message MemberCreateResponse {
  int64 id = 1;
  string email = 2;
  string password = 3;
  string name = 4;
  string profileImageBase64 = 5;
  string etcInfo = 6;
}